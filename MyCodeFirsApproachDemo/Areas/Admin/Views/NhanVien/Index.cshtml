@model IEnumerable<AutomobileLibrary.DataAccess.NhanVien>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Quản Lý Nhân Viên";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<header class="panel-heading">
    Quản lý Nhân Viên
</header>
<div class="panel-body">
    <p>
    @Html.ActionLink("Thêm Mới","Create","NhanVien", null, new {@class="btn btn-danger"})
    </p>
    <div class="text-align">
        @if (TempData["AlertMessage"] != null)
        {
            

                <div id="AlertBox" class="alert @TempData["AlertType"]">

                @TempData["AlertMessage"]
                </div>
            
        }
    </div>
    <div class="row form-body">
        <div class="form-group mb-4">
        @using (Html.BeginForm("Index", "NhanVien", FormMethod.Get))
        {
                <div class="row col-lg-6">
                @Html.TextBox("SearchString", TempData["searchString"], null, new {@class="form-control", @placeholder="Nhập từ khoá cần tìm kiếm"})
            </div>

            <div class="col-lg-6">
                <input type="submit" class="btn btn-danger" value="Tìm kiếm" />
            </div
            <div style="clear: both"></div>
        }
        </div>
        @using (Html.BeginForm("DeleteMultiple", "NhanVien", FormMethod.Post))
        {
            <div class="form-group">
            <table class="table table-striped">
                
                <thead>
                    <tr>
                        <th>
                            @{
                                var sortBy = Context.Request.Query["sortby"] == "id" ? "iddesc" : "id";
                            }
                            <a href="@Url.Action("Index","NhanVien",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                            @Html.DisplayNameFor(model => model.MaNhanVien)
                            </a>
                        </th>
                        <th>
                            @{
                                sortBy = Context.Request.Query["sortby"] == "TenNhanVien" ? "TenNhanViendesc" : "TenNhanVien";
                            }
                            <a href="@Url.Action("Index","NhanVien",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                            @Html.DisplayNameFor(model => model.TenNhanVien)
                            </a>
                        </th>
                        <th>
                            @{
                                sortBy = Context.Request.Query["sortby"] == "DiaChi" ? "DiaChidesc" : "DiaChi";
                            }
                            <a href="@Url.Action("Index","NhanVien",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                            @Html.DisplayNameFor(model => model.DiaChi)
                            </a>
                        </th>
                        <th>
                            @{
                                
                                sortBy = Context.Request.Query["sortby"] == "NgaySinh" ? "NgaySinhdesc" : "NgaySinh";
                            }
                            <a href="@Url.Action("Index","NhanVien",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                            @Html.DisplayNameFor(model =>  model.NgaySinh)
                            

                            </a>
                            
                          </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DienThoai)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.GioiTinh)
                        </th>
                        <th>
                            Chức năng

                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                 
                                            @Html.DisplayFor(modelItem => item.MaNhanVien)
                                </td>
                                <td>
                                 
                                        @Html.DisplayFor(modelItem => item.TenNhanVien)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DiaChi)
                                </td>
                                <td>
                                    @Convert.ToDateTime(item.NgaySinh).ToString("dd/MM/yyyy")
                                    @* @Html.DisplayFor(modelItem => item.NgaySinh) *@
                                     @* @Html.DisplayFor(modelItem => Convert.ToDateTime(item.NgaySinh).ToString("dd/MM/yyyy") ) *@
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DienThoai)
                                </td>
                                <td>
                                    @{
                                    var gender = item.GioiTinh;
                                    var icon = "";
                                    if (gender)
                                    {
                                        icon = "male";
                                    }
                                    else
                                    {
                                        icon = "female";
                                    }
                                    }
                                    <i class="fa fa-@icon"></i>
                                    @* @(item.GioiTinh?"Nam":"Nữ") *@
                                    <a href="#" class="btn @(item.GioiTinh ? "btn-warning":"btn-primary") btn-active" data-id="@item.MaNhanVien">@(item.GioiTinh ? "Nam" : "Nữ")</a>
                                </td>
                                <td>
                                    @Html.ActionLink("Sửa", "Edit", new {  id=item.MaNhanVien  },new {@class="text-danger"}) |
                                    @Html.ActionLink("Chi Tiết", "Details", new {  id=item.MaNhanVien},new {@class="text-green" })  |
                                    @Html.ActionLink("Xóa", "Delete", new {id=item.MaNhanVien },new {@class="text-danger"})
                                    <input type="checkbox" name="SelectedCatDelete" value="@item.MaNhanVien">
                                </td>
                            </tr>
                        }
                    }
                </tbody>
             </table>
                @Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page,
                SearchString = @Context.Request.Query["SearchString"],sortby = @Context.Request.Query["sortby"]}),
                 new X.PagedList.Web.Common.PagedListRenderOptions {
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] { "page-link" }})
        <div class="form-group">
            <button type="submit" class="btn btn-danger">Delete Selected Rows</button>
          </div>
        </div>
        }
    </div>
    
</div> 
@section Scripts{
    @{
        DateTime crurenDate = DateTime.Now;
    }
     <script type="text/javascript" src="~/Scripts/jquery-ui.js"></script>
     <script src="~/admin/js/controller/nhanviencontroller.js?@crurenDate"></script>
     <Script>


        $('#CityId').on('change', function(event){
    var form = $(event.target).parents('form');
    form.submit();
    });
    </Script> 
}